"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[284],{3344:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=a(5893),t=a(1151);const o={sidebar_position:2},s="Ruta",i={id:"pillars/route-management",title:"Ruta",description:"Esta es la explicaci\xf3n completa de todo lo que hay para Getx cuando el asunto es la gesti\xf3n de rutas.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/pillars/route-management.md",sourceDirName:"pillars",slug:"/pillars/route-management",permalink:"/getx/es/docs/pillars/route-management",draft:!1,unlisted:!1,editUrl:"https://github.com/jonataslaw/getx/docs/pillars/route-management.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Estado",permalink:"/getx/es/docs/pillars/state-management"},next:{title:"Dependencia",permalink:"/getx/es/docs/pillars/dependency-management"}},l={},d=[{value:"C\xf3mo usar",id:"c\xf3mo-usar",level:2},{value:"Navegaci\xf3n sin rutas con nombre",id:"navegaci\xf3n-sin-rutas-con-nombre",level:2},{value:"Navegaci\xf3n con rutas con nombre",id:"navegaci\xf3n-con-rutas-con-nombre",level:2},{value:"Enviar datos a rutas nombradas",id:"enviar-datos-a-rutas-nombradas",level:3},{value:"Enlaces de urls din\xe1micos",id:"enlaces-de-urls-din\xe1micos",level:3},{value:"Medios",id:"medios",level:3},{value:"Navegaci\xf3n sin contexto",id:"navegaci\xf3n-sin-contexto",level:2},{value:"SnackBars",id:"snackbars",level:3},{value:"Di\xe1logos",id:"di\xe1logos",level:3},{value:"Hojas",id:"hojas",level:3},{value:"Navegaci\xf3n anidada",id:"navegaci\xf3n-anidada",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ruta",children:"Ruta"}),"\n",(0,r.jsx)(n.p,{children:"Esta es la explicaci\xf3n completa de todo lo que hay para Getx cuando el asunto es la gesti\xf3n de rutas."}),"\n",(0,r.jsx)(n.h2,{id:"c\xf3mo-usar",children:"C\xf3mo usar"}),"\n",(0,r.jsx)(n.p,{children:"A\xf1ade esto a tu archivo pubspec.yaml:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  get:\n"})}),"\n",(0,r.jsx)(n.p,{children:'Si va a usar rutas/barras/barras/di\xe1logo/hojas de abajo sin contexto, o utilizar las APIs de alto nivel, tienes que simplemente a\xf1adir "Get" antes de tu MaterialApp, convirti\xe9ndola en GetMaterialApp y disfrutar!'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp( // Before: MaterialApp(\n  home: MyHome(),\n)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"navegaci\xf3n-sin-rutas-con-nombre",children:"Navegaci\xf3n sin rutas con nombre"}),"\n",(0,r.jsx)(n.p,{children:"Para navegar a una nueva pantalla:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.to(NextScreen());\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para cerrar barras de rejillas, di\xe1logos, hojas de fondo, o cualquier cosa que normalmente cierre con Navigator.pop(context);"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.back();\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para ir a la siguiente pantalla y no hay opci\xf3n para volver a la pantalla anterior (para uso en SplashScreens, pantallas de inicio de sesi\xf3n y etc.)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.off(NextScreen());\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para ir a la siguiente pantalla y cancelar todas las rutas anteriores (\xfatil en carritos de la compra, encuestas y pruebas)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.offAll(NextScreen());\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para navegar a la siguiente ruta, y recibir o actualizar los datos tan pronto como regrese de \xe9l:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"var data = await Get.to(Payment());\n"})}),"\n",(0,r.jsx)(n.p,{children:"en otra pantalla, enviar datos para la ruta anterior:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.back(result: 'success');\n"})}),"\n",(0,r.jsx)(n.p,{children:"Y \xfasalo:"}),"\n",(0,r.jsx)(n.p,{children:"ex:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"if(data == 'success') madeAnything();\n"})}),"\n",(0,r.jsx)(n.p,{children:"\xbfNo quieres aprender nuestra sintaxis?\nSimplemente cambia el Navigator (may\xfasculas) a navegador (min\xfasculas), y tendr\xe1 todas las funciones de la navegaci\xf3n est\xe1ndar, sin tener que utilizar el contexto\nEjemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"\n// Default Flutter navigator\nNavigator.of(context).push(\n  context,\n  MaterialPageRoute(\n    builder: (BuildContext context) {\n      return HomePage();\n    },\n  ),\n);\n\n// Get using Flutter syntax without needing context\nnavigator.push(\n  MaterialPageRoute(\n    builder: (_) {\n      return HomePage();\n    },\n  ),\n);\n\n// Get syntax (It is much better, but you have the right to disagree)\nGet.to(HomePage());\n\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"navegaci\xf3n-con-rutas-con-nombre",children:"Navegaci\xf3n con rutas con nombre"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Si prefiere navegar por namedRoutes, Get tambi\xe9n soporta esto."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Para navegar a la siguiente pantalla"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.toNamed("/NextScreen");\n'})}),"\n",(0,r.jsx)(n.p,{children:"Para navegar y quitar la pantalla anterior del \xe1rbol."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.offNamed("/NextScreen");\n'})}),"\n",(0,r.jsx)(n.p,{children:"Para navegar y eliminar todas las pantallas anteriores del \xe1rbol."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.offAllNamed("/NextScreen");\n'})}),"\n",(0,r.jsx)(n.p,{children:"Para definir rutas, utilice GetMaterialApp:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void main() {\n  runApp(\n    GetMaterialApp(\n      initialRoute: '/',\n      getPages: [\n        GetPage(name: '/', page: () => MyHomePage()),\n        GetPage(name: '/second', page: () => Second()),\n        GetPage(\n          name: '/third',\n          page: () => Third(),\n          transition: Transition.zoom  \n        ),\n      ],\n    )\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para manejar la navegaci\xf3n a rutas no definidas (error 404), puede definir una p\xe1gina desconocida en GetMaterialApp."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void main() {\n  runApp(\n    GetMaterialApp(\n      unknownRoute: GetPage(name: '/notfound', page: () => UnknownRoutePage()),\n      initialRoute: '/',\n      getPages: [\n        GetPage(name: '/', page: () => MyHomePage()),\n        GetPage(name: '/second', page: () => Second()),\n      ],\n    )\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enviar-datos-a-rutas-nombradas",children:"Enviar datos a rutas nombradas"}),"\n",(0,r.jsx)(n.p,{children:"Env\xeda lo que quieras para los argumentos. Obt\xe9n cualquier cosa aqu\xed, ya sea una cadena, un mapa, una lista o incluso una instancia de clase."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.toNamed(\"/NextScreen\", arguments: 'Get is the best');\n"})}),"\n",(0,r.jsx)(n.p,{children:"en tu clase o controlador:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"print(Get.arguments);\n//print out: Get is the best\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enlaces-de-urls-din\xe1micos",children:"Enlaces de urls din\xe1micos"}),"\n",(0,r.jsx)(n.p,{children:"Obtenga urls din\xe1micas avanzadas como en la Web. Probablemente los desarrolladores web ya han querido esta caracter\xedstica en Flutter, y lo m\xe1s probable es que hayan visto una promesa de paquete esta caracter\xedstica y entregado una sintaxis totalmente diferente de la que tendr\xeda una URL en la web, pero Obtener tambi\xe9n resuelve eso."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.offAllNamed("/NextScreen?device=phone&id=354&name=Enzo");\n'})}),"\n",(0,r.jsx)(n.p,{children:"en tu clase controlador/bloque/stateful/stateless :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"print(Get.parameters['id']);\n// out: 354\nprint(Get.parameters['name']);\n// out: Enzo\n"})}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puedes recibir NamedParameters con facilidad:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"void main() {\n  runApp(\n    GetMaterialApp(\n      initialRoute: '/',\n      getPages: [\n      GetPage(\n        name: '/',\n        page: () => MyHomePage(),\n      ),\n      GetPage(\n        name: '/profile/',\n        page: () => MyProfile(),\n      ),\n       //You can define a different page for routes with arguments, and another without arguments, but for that you must use the slash '/' on the route that will not receive arguments as above.\n       GetPage(\n        name: '/profile/:user',\n        page: () => UserProfile(),\n      ),\n      GetPage(\n        name: '/third',\n        page: () => Third(),\n        transition: Transition.cupertino  \n      ),\n     ],\n    )\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enviar datos al nombre de ruta"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.toNamed("/profile/34954");\n'})}),"\n",(0,r.jsx)(n.p,{children:"En la segunda pantalla tomar los datos por par\xe1metro"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"print(Get.parameters['user']);\n// out: 34954\n"})}),"\n",(0,r.jsx)(n.p,{children:"o enviar m\xfaltiples par\xe1metros como este"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.toNamed("/profile/34954?flag=true&country=italy");\n'})}),"\n",(0,r.jsx)(n.p,{children:"o"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'var parameters = <String, String>{"flag": "true","country": "italy",};\nGet.toNamed("/profile/34954", parameters: parameters);\n'})}),"\n",(0,r.jsx)(n.p,{children:"En la segunda pantalla tomar los datos por par\xe1metros como normalmente"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"print(Get.parameters['user']);\nprint(Get.parameters['flag']);\nprint(Get.parameters['country']);\n// out: 34954 true italy\n"})}),"\n",(0,r.jsx)(n.p,{children:"Y ahora, todo lo que necesitas hacer es usar Get. oNamed() para navegar por sus rutas nombradas, sin ning\xfan contexto (puede llamar a sus rutas directamente desde su clase BLoC o Controlador), y cuando tu aplicaci\xf3n est\xe9 compilada en la web, tus rutas aparecer\xe1n en la url < 3"}),"\n",(0,r.jsx)(n.h3,{id:"medios",children:"Medios"}),"\n",(0,r.jsx)(n.p,{children:"Si quieres escuchar Obtener eventos para activar acciones, puedes usar routingCallback a \xe9l"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp(\n  routingCallback: (routing) {\n    if(routing.current == '/second'){\n      openAds();\n    }\n  }\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Si no est\xe1 usando GetMaterialApp, puede utilizar la API manual para adjuntar observador de Middleware."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'void main() {\n  runApp(\n    MaterialApp(\n      onGenerateRoute: Router.generateRoute,\n      initialRoute: "/",\n      navigatorKey: Get.key,\n      navigatorObservers: [\n        GetObserver(MiddleWare.observer), // HERE !!!\n      ],\n    ),\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Crear una clase MiddleWare"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class MiddleWare {\n  static observer(Routing routing) {\n    /// You can listen in addition to the routes, the snackbars, dialogs and bottomsheets on each screen.\n    ///If you need to enter any of these 3 events directly here,\n    ///you must specify that the event is != Than you are trying to do.\n    if (routing.current == '/second' && !routing.isSnackbar) {\n      Get.snackbar(\"Hi\", \"You are on second route\");\n    } else if (routing.current =='/third'){\n      print('last route called');\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ahora, usa Get on your code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'class First extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        leading: IconButton(\n          icon: Icon(Icons.add),\n          onPressed: () {\n            Get.snackbar("hi", "i am a modern snackbar");\n          },\n        ),\n        title: Text(\'First Route\'),\n      ),\n      body: Center(\n        child: ElevatedButton(\n          child: Text(\'Open route\'),\n          onPressed: () {\n            Get.toNamed("/second");\n          },\n        ),\n      ),\n    );\n  }\n}\n\nclass Second extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        leading: IconButton(\n          icon: Icon(Icons.add),\n          onPressed: () {\n            Get.snackbar("hi", "i am a modern snackbar");\n          },\n        ),\n        title: Text(\'second Route\'),\n      ),\n      body: Center(\n        child: ElevatedButton(\n          child: Text(\'Open route\'),\n          onPressed: () {\n            Get.toNamed("/third");\n          },\n        ),\n      ),\n    );\n  }\n}\n\nclass Third extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text("Third Route"),\n      ),\n      body: Center(\n        child: ElevatedButton(\n          onPressed: () {\n            Get.back();\n          },\n          child: Text(\'Go back!\'),\n        ),\n      ),\n    );\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"navegaci\xf3n-sin-contexto",children:"Navegaci\xf3n sin contexto"}),"\n",(0,r.jsx)(n.h3,{id:"snackbars",children:"SnackBars"}),"\n",(0,r.jsx)(n.p,{children:"Para tener un SnackBar simple con Flutter, debes tener el contexto de Scaffold, o debes usar una GlobalKey conectada a tu Scaffold"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"final snackBar = SnackBar(\n  content: Text('Hi!'),\n  action: SnackBarAction(\n    label: 'I am a old and ugly snackbar :(',\n    onPressed: (){}\n  ),\n);\n// Find the Scaffold in the widget tree and use\n// it to show a SnackBar.\nScaffold.of(context).showSnackBar(snackBar);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Con obtener:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.snackbar('Hi', 'i am a modern snackbar');\n"})}),"\n",(0,r.jsx)(n.p,{children:"Con Get, todo lo que tienes que hacer es llamar a tu Get.snackbar desde cualquier lugar de tu c\xf3digo o personalizarlo como quieras!"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.snackbar(\n  "Hey i\'m a Get SnackBar!", // title\n  "It\'s unbelievable! I\'m using SnackBar without context, without boilerplate, without Scaffold, it is something truly amazing!", // message\n  icon: Icon(Icons.alarm),\n  shouldIconPulse: true,\n  onTap:(){},\n  barBlur: 20,\n  isDismissible: true,\n  duration: Duration(seconds: 3),\n);\n\n\n  ////////// ALL FEATURES //////////\n  //     Color colorText,\n  //     Duration duration,\n  //     SnackPosition snackPosition,\n  //     Widget titleText,\n  //     Widget messageText,\n  //     bool instantInit,\n  //     Widget icon,\n  //     bool shouldIconPulse,\n  //     double maxWidth,\n  //     EdgeInsets margin,\n  //     EdgeInsets padding,\n  //     double borderRadius,\n  //     Color borderColor,\n  //     double borderWidth,\n  //     Color backgroundColor,\n  //     Color leftBarIndicatorColor,\n  //     List<BoxShadow> boxShadows,\n  //     Gradient backgroundGradient,\n  //     TextButton mainButton,\n  //     OnTap onTap,\n  //     bool isDismissible,\n  //     bool showProgressIndicator,\n  //     AnimationController progressIndicatorController,\n  //     Color progressIndicatorBackgroundColor,\n  //     Animation<Color> progressIndicatorValueColor,\n  //     SnackStyle snackStyle,\n  //     Curve forwardAnimationCurve,\n  //     Curve reverseAnimationCurve,\n  //     Duration animationDuration,\n  //     double barBlur,\n  //     double overlayBlur,\n  //     Color overlayColor,\n  //     Form userInputForm\n  ///////////////////////////////////\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Si prefieres la tradicional barra de barras o quieres personalizarla desde cero, incluyendo a\xf1adir una sola l\xednea (Obt\xe9n. nackbar hace uso de un t\xedtulo y mensaje obligatorios), puedes usar\n",(0,r.jsx)(n.code,{children:"Get.rawSnackbar();"})," que proporciona la API RAW en la que se construy\xf3 Get.snackbar."]}),"\n",(0,r.jsx)(n.h3,{id:"di\xe1logos",children:"Di\xe1logos"}),"\n",(0,r.jsx)(n.p,{children:"Para abrir el di\xe1logo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.dialog(YourDialogWidget());\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para abrir el cuadro de di\xe1logo predeterminado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:'Get.defaultDialog(\n  onConfirm: () => print("Ok"),\n  middleText: "Dialog made in 3 lines of code"\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puede utilizar Get.generalDialog en lugar de showGeneralDialog."}),"\n",(0,r.jsx)(n.p,{children:"Para todos los dem\xe1s widgets de di\xe1logo de Flutter, incluyendo cupertinos, puede usar Get.overlayContext en lugar de contexto, y abrirlo en cualquier lugar de su c\xf3digo.\nPara los widgets que no usan Overlay, puede usar Get.context.\nEstos dos contextos funcionar\xe1n en el 99% de los casos para reemplazar el contexto de tu interfaz de usuario excepto los casos en los que herededWidget se utiliza sin un contexto de navegaci\xf3n."}),"\n",(0,r.jsx)(n.h3,{id:"hojas",children:"Hojas"}),"\n",(0,r.jsx)(n.p,{children:"Get.bottomSheet es como showModalBottomSheet, pero no necesita contexto."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Get.bottomSheet(\n  Container(\n    child: Wrap(\n      children: <Widget>[\n        ListTile(\n          leading: Icon(Icons.music_note),\n          title: Text('Music'),\n          onTap: () {}\n        ),\n        ListTile(\n          leading: Icon(Icons.videocam),\n          title: Text('Video'),\n          onTap: () {},\n        ),\n      ],\n    ),\n  )\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"navegaci\xf3n-anidada",children:"Navegaci\xf3n anidada"}),"\n",(0,r.jsx)(n.p,{children:"Haz que la navegaci\xf3n anidada de Flutter sea a\xfan m\xe1s f\xe1cil.\nNo necesita el contexto, y encontrar\xe1 su pila de navegaci\xf3n por Id."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NOTA: Crear pilas de navegaci\xf3n paralelas puede ser peligroso. Lo ideal es no utilizar NestedNavigators ni utilizar esparcidamente. Si su proyecto lo necesita, siga adelante, pero ten en cuenta que mantener m\xfaltiples pilas de navegaci\xf3n en memoria puede no ser una buena idea para el consumo de RAM."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mira lo simple que es:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Navigator(\n  key: Get.nestedKey(1), // create a key by index\n  initialRoute: '/',\n  onGenerateRoute: (settings) {\n    if (settings.name == '/') {\n      return GetPageRoute(\n        page: () => Scaffold(\n          appBar: AppBar(\n            title: Text(\"Main\"),\n          ),\n          body: Center(\n            child: TextButton(\n              color: Colors.blue,\n              onPressed: () {\n                Get.toNamed('/second', id:1); // navigate by your nested route by index\n              },\n              child: Text(\"Go to second\"),\n            ),\n          ),\n        ),\n      );\n    } else if (settings.name == '/second') {\n      return GetPageRoute(\n        page: () => Center(\n          child: Scaffold(\n            appBar: AppBar(\n              title: Text(\"Main\"),\n            ),\n            body: Center(\n              child:  Text(\"second\")\n            ),\n          ),\n        ),\n      );\n    }\n  }\n),\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>i,a:()=>s});var r=a(7294);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);