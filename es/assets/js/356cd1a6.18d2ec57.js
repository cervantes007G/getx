"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[799],{2698:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=a(5893),t=a(1151);const s={sidebar_position:4},r="Utils",o={id:"utils",title:"Utils",description:"Internacionalizaci\xf3n",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/utils.md",sourceDirName:".",slug:"/utils",permalink:"/getx/es/docs/utils",draft:!1,unlisted:!1,editUrl:"https://github.com/jonataslaw/getx/docs/utils.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Dependencia",permalink:"/getx/es/docs/pillars/dependency-management"},next:{title:"Community",permalink:"/getx/es/docs/category/community"}},l={},d=[{value:"Internacionalizaci\xf3n",id:"internacionalizaci\xf3n",level:2},{value:"Traducciones",id:"traducciones",level:3},{value:"Usando traducciones",id:"usando-traducciones",level:4},{value:"Utilizando la traducci\xf3n con singular y plural",id:"utilizando-la-traducci\xf3n-con-singular-y-plural",level:4},{value:"Utilizando la traducci\xf3n con par\xe1metros",id:"utilizando-la-traducci\xf3n-con-par\xe1metros",level:4},{value:"Locales",id:"locales",level:3},{value:"Cambiar idioma",id:"cambiar-idioma",level:4},{value:"Localizaci\xf3n del sistema",id:"localizaci\xf3n-del-sistema",level:4},{value:"Cambiar tema",id:"cambiar-tema",level:2},{value:"Conectar",id:"conectar",level:2},{value:"Configuraci\xf3n por defecto",id:"configuraci\xf3n-por-defecto",level:3},{value:"Configuraci\xf3n personalizada",id:"configuraci\xf3n-personalizada",level:3},{value:"Obtener Middleware",id:"obtener-middleware",level:2},{value:"Prioridad",id:"prioridad",level:3},{value:"Redirigir",id:"redirigir",level:3},{value:"en la p\xe1gina llamada",id:"en-la-p\xe1gina-llamada",level:3},{value:"OnBindingsStart",id:"onbindingsstart",level:3},{value:"Inicio OnPageBuild",id:"inicio-onpagebuild",level:3},{value:"OnPageBuilt",id:"onpagebuilt",level:3},{value:"Disponer en la p\xe1gina",id:"disponer-en-la-p\xe1gina",level:3},{value:"Otras API avanzadas",id:"otras-api-avanzadas",level:2},{value:"Configuraci\xf3n global opcional y configuraciones manuales",id:"configuraci\xf3n-global-opcional-y-configuraciones-manuales",level:3},{value:"Widgets del estado local",id:"widgets-del-estado-local",level:3},{value:"Constructor de valores",id:"constructor-de-valores",level:4},{value:"ObxValue",id:"obxvalue",level:4},{value:"Consejos \xfatiles",id:"consejos-\xfatiles",level:2},{value:"Mixin de estado",id:"mixin-de-estado",level:2},{value:"GetView",id:"getview",level:4},{value:"Ver Responsiva",id:"ver-responsiva",level:4},{value:"C\xf3mo usarlo",id:"c\xf3mo-usarlo",level:5},{value:"GetWidget",id:"getwidget",level:4},{value:"GetxService",id:"getxservice",level:4},{value:"Tests",id:"tests",level:3},{value:"Consejos",id:"consejos",level:4},{value:"Mockito o cola de mocktail",id:"mockito-o-cola-de-mocktail",level:5},{value:"Usando Get.reset()",id:"usando-getreset",level:5},{value:"Get.testMode",id:"gettestmode",level:5}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"utils",children:"Utils"}),"\n",(0,i.jsx)(n.h2,{id:"internacionalizaci\xf3n",children:"Internacionalizaci\xf3n"}),"\n",(0,i.jsx)(n.h3,{id:"traducciones",children:"Traducciones"}),"\n",(0,i.jsxs)(n.p,{children:["Las traducciones se mantienen como un simple mapa del diccionario clave-valor.\nPara a\xf1adir traducciones personalizadas, crea una clase y extiende ",(0,i.jsx)(n.code,{children:"traducciones"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"import 'package:get/get.dart';\n\nclass Messages extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        'en_US': {\n          'hello': 'Hello World',\n        },\n        'de_DE': {\n          'hello': 'Hallo Welt',\n        }\n      };\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"usando-traducciones",children:"Usando traducciones"}),"\n",(0,i.jsxs)(n.p,{children:["Simplemente a\xf1ade ",(0,i.jsx)(n.code,{children:".tr"})," a la clave especificada y se traducir\xe1, usando el valor actual de ",(0,i.jsx)(n.code,{children:"Get.locale"})," y ",(0,i.jsx)(n.code,{children:"Get.fallbackLocale"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Text('title'.tr);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"utilizando-la-traducci\xf3n-con-singular-y-plural",children:"Utilizando la traducci\xf3n con singular y plural"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"var products = [];\nText('singularKey'.trPlural('pluralKey', products.length, Args));\n"})}),"\n",(0,i.jsx)(n.h4,{id:"utilizando-la-traducci\xf3n-con-par\xe1metros",children:"Utilizando la traducci\xf3n con par\xe1metros"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"import 'package:get/get.dart';\n\n\nMap<String, Map<String, String>> get keys => {\n    'en_US': {\n        'logged_in': 'logged in as @name with email @email',\n    },\n    'es_ES': {\n       'logged_in': 'iniciado sesi\xf3n como @name con e-mail @email',\n    }\n};\n\nText('logged_in'.trParams({\n  'name': 'Jhon',\n  'email': 'jhon@example.com'\n  }));\n"})}),"\n",(0,i.jsx)(n.h3,{id:"locales",children:"Locales"}),"\n",(0,i.jsxs)(n.p,{children:["Pasar los par\xe1metros a ",(0,i.jsx)(n.code,{children:"GetMaterialApp"})," para definir la localizaci\xf3n y las traducciones."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"return GetMaterialApp(\n    translations: Messages(), // your translations\n    locale: Locale('en', 'US'), // translations will be displayed in that locale\n    fallbackLocale: Locale('en', 'UK'), // specify the fallback locale in case an invalid locale is selected.\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"cambiar-idioma",children:"Cambiar idioma"}),"\n",(0,i.jsxs)(n.p,{children:["Llama a ",(0,i.jsx)(n.code,{children:"Get.updateLocale(locale)"})," para actualizar la locale. A continuaci\xf3n, las traducciones utilizan autom\xe1ticamente el nuevo idioma."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"var locale = Locale('en', 'US');\nGet.updateLocale(locale);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"localizaci\xf3n-del-sistema",children:"Localizaci\xf3n del sistema"}),"\n",(0,i.jsxs)(n.p,{children:["Para leer la configuraci\xf3n regional del sistema, puede utilizar ",(0,i.jsx)(n.code,{children:"Get.deviceLocale"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"return GetMaterialApp(\n    locale: Get.deviceLocale,\n);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"cambiar-tema",children:"Cambiar tema"}),"\n",(0,i.jsxs)(n.p,{children:["Por favor, no utilice ning\xfan widget de nivel superior a ",(0,i.jsx)(n.code,{children:"GetMaterialApp"}),' para actualizarlo. Esto puede desencadenar claves duplicadas. Muchas personas est\xe1n acostumbradas al enfoque prehist\xf3rico de crear un widget "ThemeProvider" s\xf3lo para cambiar el tema de tu aplicaci\xf3n, y esto definitivamente NO es necesario con ',(0,i.jsx)(n.strong,{children:"GetXTM"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Puedes crear tu tema personalizado y simplemente a\xf1adirlo en ",(0,i.jsx)(n.code,{children:"Get.changeTheme"})," sin ning\xfan tipo de aviso para eso:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Get.changeTheme(ThemeData.light());\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Si quieres crear algo como un bot\xf3n que cambia el tema en ",(0,i.jsx)(n.code,{children:"onTap"}),", puedes combinar dos API ",(0,i.jsx)(n.strong,{children:"GetXTM"})," para eso:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La api que comprueba si el oscuro ",(0,i.jsx)(n.code,{children:"Theme"})," est\xe1 siendo usado."]}),"\n",(0,i.jsxs)(n.li,{children:["Y el API de cambio de ",(0,i.jsx)(n.code,{children:"Theme"}),", puedes poner esto dentro de un ",(0,i.jsx)(n.code,{children:"onPressed"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Get.changeTheme(Get.isDarkMode? ThemeData.light(): ThemeData.dark());\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Cuando ",(0,i.jsx)(n.code,{children:".darkmode"})," est\xe1 activado, cambiar\xe1 al ",(0,i.jsx)(n.em,{children:"light theme"}),", y cuando el ",(0,i.jsx)(n.em,{children:"light theme"})," se activa, cambiar\xe1 a ",(0,i.jsx)(n.em,{children:"tema oscuro"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"conectar",children:"Conectar"}),"\n",(0,i.jsx)(n.p,{children:"GetConnect es una forma f\xe1cil de comunicarse desde la parte trasera a tu frente con http o websockets"}),"\n",(0,i.jsx)(n.h3,{id:"configuraci\xf3n-por-defecto",children:"Configuraci\xf3n por defecto"}),"\n",(0,i.jsx)(n.p,{children:"Puede simplemente extender GetConnect y utilizar los m\xe9todos GET/POST/PUT/DELETE/SOCKET para comunicarse con su API Rest o websockets."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class UserProvider extends GetConnect {\n  // Get request\n  Future<Response> getUser(int id) => get('http://youapi/users/$id');\n  // Post request\n  Future<Response> postUser(Map data) => post('http://youapi/users', body: data);\n  // Post request with File\n  Future<Response<CasesModel>> postCases(List<int> image) {\n    final form = FormData({\n      'file': MultipartFile(image, filename: 'avatar.png'),\n      'otherFile': MultipartFile(image, filename: 'cover.png'),\n    });\n    return post('http://youapi/users/upload', form);\n  }\n\n  GetSocket userMessages() {\n    return socket('https://yourapi/users/socket');\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configuraci\xf3n-personalizada",children:"Configuraci\xf3n personalizada"}),"\n",(0,i.jsx)(n.p,{children:"GetConnect es altamente personalizable. Puedes definir la Url base, como modificadores de respuesta, como modificadores de peticiones, definen un autenticador, e incluso el n\xfamero de intentos en los que intentar\xe1 autoautenticarse. adem\xe1s de dar la posibilidad de definir un decodificador est\xe1ndar que transformar\xe1 todas sus peticiones en sus modelos sin ninguna configuraci\xf3n adicional."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class HomeProvider extends GetConnect {\n  @override\n  void onInit() {\n    // All request will pass to jsonEncode so CasesModel.fromJson()\n    httpClient.defaultDecoder = CasesModel.fromJson;\n    httpClient.baseUrl = 'https://api.covid19api.com';\n    // baseUrl = 'https://api.covid19api.com'; // It define baseUrl to\n    // Http and websockets if used with no [httpClient] instance\n\n    // It's will attach 'apikey' property on header from all requests\n    httpClient.addRequestModifier((request) {\n      request.headers['apikey'] = '12345678';\n      return request;\n    });\n\n    // Even if the server sends data from the country \"Brazil\",\n    // it will never be displayed to users, because you remove\n    // that data from the response, even before the response is delivered\n    httpClient.addResponseModifier<CasesModel>((request, response) {\n      CasesModel model = response.body;\n      if (model.countries.contains('Brazil')) {\n        model.countries.remove('Brazilll');\n      }\n    });\n\n    httpClient.addAuthenticator((request) async {\n      final response = await get(\"http://yourapi/token\");\n      final token = response.body['token'];\n      // Set the header\n      request.headers['Authorization'] = \"$token\";\n      return request;\n    });\n\n    //Autenticator will be called 3 times if HttpStatus is\n    //HttpStatus.unauthorized\n    httpClient.maxAuthRetries = 3;\n  }\n\n  @override\n  Future<Response<CasesModel>> getCases(String path) => get(path);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"obtener-middleware",children:"Obtener Middleware"}),"\n",(0,i.jsx)(n.p,{children:"GetPage tiene ahora una nueva propiedad que toma una lista de GetMiddleWare y ejecutarlos en el orden espec\xedfico."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Nota"}),": Cuando GetPage tenga un Middlewares, todos los hijos de esta p\xe1gina tendr\xe1n los mismos middlewares autom\xe1ticamente."]}),"\n",(0,i.jsx)(n.h3,{id:"prioridad",children:"Prioridad"}),"\n",(0,i.jsx)(n.p,{children:"La Orden de los Middlewares a ejecutar puede ser establecida por la prioridad en el GetMiddleware."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"final middlewares = [\n  GetMiddleware(priority: 2),\n  GetMiddleware(priority: 5),\n  GetMiddleware(priority: 4),\n  GetMiddleware(priority: -8),\n];\n"})}),"\n",(0,i.jsxs)(n.p,{children:["esos middlewares se ejecutar\xe1n en este orden ",(0,i.jsx)(n.strong,{children:"-8 => 2 => 4 => 5"})]}),"\n",(0,i.jsx)(n.h3,{id:"redirigir",children:"Redirigir"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n ser\xe1 llamada cuando se busque la p\xe1gina de la ruta llamada. Se necesita RouteSettings como resultado para redirigirse. O dale nulo y no habr\xe1 redireccionamiento."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"RouteSettings redirect(String route) {\n  final authService = Get.find<AuthService>();\n  return authService.authed.value ? null : RouteSettings(name: '/login')\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"en-la-p\xe1gina-llamada",children:"en la p\xe1gina llamada"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n se llamar\xe1 cuando se llame a esta p\xe1gina antes de cualquier cosa creada\npuedes usarla para cambiar algo sobre la p\xe1gina o darle una nueva p\xe1gina"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetPage onPageCalled(GetPage page) {\n  final authService = Get.find<AuthService>();\n  return page.copyWith(title: 'Welcome ${authService.UserName}');\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"onbindingsstart",children:"OnBindingsStart"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n se llamar\xe1 justo antes de que los enlaces sean inicializados.\nAqu\xed puedes cambiar los enlaces para esta p\xe1gina."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"List<Bindings> onBindingsStart(List<Bindings> bindings) {\n  final authService = Get.find<AuthService>();\n  if (authService.isAdmin) {\n    bindings.add(AdminBinding());\n  }\n  return bindings;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"inicio-onpagebuild",children:"Inicio OnPageBuild"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n se llamar\xe1 justo despu\xe9s de que los enlaces sean inicializados.\nAqu\xed puedes hacer algo despu\xe9s de que hayas creado los enlaces y antes de crear el widget de p\xe1gina."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetPageBuilder onPageBuildStart(GetPageBuilder page) {\n  print('bindings are ready');\n  return page;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"onpagebuilt",children:"OnPageBuilt"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n ser\xe1 llamada justo despu\xe9s de que la funci\xf3n GetPage.page sea llamada y le dar\xe1 el resultado de la funci\xf3n. y tome el widget que se mostrar\xe1."}),"\n",(0,i.jsx)(n.h3,{id:"disponer-en-la-p\xe1gina",children:"Disponer en la p\xe1gina"}),"\n",(0,i.jsx)(n.p,{children:"Esta funci\xf3n se llamar\xe1 justo despu\xe9s de eliminar todos los objetos relacionados (Controladores, vistas, ...) de la p\xe1gina."}),"\n",(0,i.jsx)(n.h2,{id:"otras-api-avanzadas",children:"Otras API avanzadas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// give the current args from currentScreen\nGet.arguments\n\n// give name of previous route\nGet.previousRoute\n\n// give the raw route to access for example, rawRoute.isFirst()\nGet.rawRoute\n\n// give access to Routing API from GetObserver\nGet.routing\n\n// check if snackbar is open\nGet.isSnackbarOpen\n\n// check if dialog is open\nGet.isDialogOpen\n\n// check if bottomsheet is open\nGet.isBottomSheetOpen\n\n// remove one route.\nGet.removeRoute()\n\n// back repeatedly until the predicate returns true.\nGet.until()\n\n// go to next route and remove all the previous routes until the predicate returns true.\nGet.offUntil()\n\n// go to next named route and remove all the previous routes until the predicate returns true.\nGet.offNamedUntil()\n\n//Check in what platform the app is running\nGetPlatform.isAndroid\nGetPlatform.isIOS\nGetPlatform.isMacOS\nGetPlatform.isWindows\nGetPlatform.isLinux\nGetPlatform.isFuchsia\n\n//Check the device type\nGetPlatform.isMobile\nGetPlatform.isDesktop\n//All platforms are supported independently in web!\n//You can tell if you are running inside a browser\n//on Windows, iOS, OSX, Android, etc.\nGetPlatform.isWeb\n\n\n// Equivalent to : MediaQuery.of(context).size.height,\n// but immutable.\nGet.height\nGet.width\n\n// Gives the current context of the Navigator.\nGet.context\n\n// Gives the context of the snackbar/dialog/bottomsheet in the foreground, anywhere in your code.\nGet.contextOverlay\n\n// Note: the following methods are extensions on context. Since you\n// have access to context in any place of your UI, you can use it anywhere in the UI code\n\n// If you need a changeable height/width (like Desktop or browser windows that can be scaled) you will need to use context.\ncontext.width\ncontext.height\n\n// Gives you the power to define half the screen, a third of it and so on.\n// Useful for responsive applications.\n// param dividedBy (double) optional - default: 1\n// param reducedBy (double) optional - default: 0\ncontext.heightTransformer()\ncontext.widthTransformer()\n\n/// Similar to MediaQuery.sizeOf(context);\ncontext.mediaQuerySize()\n\n/// Similar to MediaQuery.paddingOf(context);\ncontext.mediaQueryPadding()\n\n/// Similar to MediaQuery.viewPaddingOf(context);\ncontext.mediaQueryViewPadding()\n\n/// Similar to MediaQuery.viewInsetsOf(context);\ncontext.mediaQueryViewInsets()\n\n/// Similar to MediaQuery.orientationOf(context);\ncontext.orientation()\n\n/// Check if device is on landscape mode\ncontext.isLandscape()\n\n/// Check if device is on portrait mode\ncontext.isPortrait()\n\n/// Similar to MediaQuery.devicePixelRatioOf(context);\ncontext.devicePixelRatio()\n\n/// Similar to MediaQuery.textScaleFactorOf(context);\ncontext.textScaleFactor()\n\n/// Get the shortestSide from screen\ncontext.mediaQueryShortestSide()\n\n/// True if width be larger than 800\ncontext.showNavbar()\n\n/// True if the shortestSide is smaller than 600p\ncontext.isPhone()\n\n/// True if the shortestSide is largest than 600p\ncontext.isSmallTablet()\n\n/// True if the shortestSide is largest than 720p\ncontext.isLargeTablet()\n\n/// True if the current device is Tablet\ncontext.isTablet()\n\n/// Returns a value<T> according to the screen size\n/// can give value for:\n/// watch: if the shortestSide is smaller than 300\n/// mobile: if the shortestSide is smaller than 600\n/// tablet: if the shortestSide is smaller than 1200\n/// desktop: if width is largest than 1200\ncontext.responsiveValue<T>()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configuraci\xf3n-global-opcional-y-configuraciones-manuales",children:"Configuraci\xf3n global opcional y configuraciones manuales"}),"\n",(0,i.jsx)(n.p,{children:"GetMaterialApp configura todo para ti, pero si quieres configurar Get manualmente."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"MaterialApp(\n  navigatorKey: Get.key,\n  navigatorObservers: [GetObserver()],\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Tambi\xe9n podr\xe1 utilizar su propio Middleware dentro de ",(0,i.jsx)(n.code,{children:"GetObserver"}),", esto no influir\xe1 en nada."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"MaterialApp(\n  navigatorKey: Get.key,\n  navigatorObservers: [\n    GetObserver(MiddleWare.observer) // Here\n  ],\n);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Puedes crear ",(0,i.jsx)(n.em,{children:"Configuraci\xf3n global"})," para ",(0,i.jsx)(n.code,{children:"Get"}),". Simplemente a\xf1ade ",(0,i.jsx)(n.code,{children:"Get.config"})," a tu c\xf3digo antes de empujar cualquier ruta.\nO hazlo directamente en tu ",(0,i.jsx)(n.code,{children:"GetMaterialApp"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp(\n  enableLog: true,\n  defaultTransition: Transition.fade,\n  opaqueRoute: Get.isOpaqueRouteDefault,\n  popGesture: Get.isPopGestureEnable,\n  transitionDuration: Get.defaultDurationTransition,\n  defaultGlobalState: Get.defaultGlobalState,\n);\n\nGet.config(\n  enableLog = true,\n  defaultPopGesture = true,\n  defaultTransition = Transitions.cupertino\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Opcionalmente puede redirigir todos los mensajes de registro de ",(0,i.jsx)(n.code,{children:"Get"}),".\nSi quieres usar tu propio paquete de registro favorito,\ny quieres capturar los registros ah\xed:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp(\n  enableLog: true,\n  logWriterCallback: localLogWriter,\n);\n\nvoid localLogWriter(String text, {bool isError = false}) {\n  // pass the message to your favourite logging package here\n  // please note that even if enableLog: false log messages will be pushed in this callback\n  // you get check the flag if you want through GetConfig.isLogEnable\n}\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"widgets-del-estado-local",children:"Widgets del estado local"}),"\n",(0,i.jsxs)(n.p,{children:["Estos Widgets te permiten administrar un \xfanico valor, y mantener el estado efemeral y localmente.\nTenemos sabores para Reactive y simples.\nPor ejemplo, puedes usarlos para alternar obscureText en un ",(0,i.jsx)(n.code,{children:"TextField"}),", tal vez crear un Panel\nPersonalizable, o tal vez modificar el \xedndice actual en ",(0,i.jsx)(n.code,{children:"BottomNavigationBar"})," cambiando el contenido\ndel cuerpo en un ",(0,i.jsx)(n.code,{children:"Scaffold"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"constructor-de-valores",children:"Constructor de valores"}),"\n",(0,i.jsxs)(n.p,{children:["Una simplificaci\xf3n de ",(0,i.jsx)(n.code,{children:"StatefulWidget"})," que funciona con un callback ",(0,i.jsx)(n.code,{children:".setState"})," que toma el valor actualizado."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:'ValueBuilder<bool>(\n  initialValue: false,\n  builder: (value, updateFn) => Switch(\n    value: value,\n    onChanged: updateFn, // same signature! you could use ( newValue ) => updateFn( newValue )\n  ),\n  // if you need to call something outside the builder method.\n  onUpdate: (value) => print("Value updated: $value"),\n  onDispose: () => print("Widget unmounted"),\n),\n'})}),"\n",(0,i.jsx)(n.h4,{id:"obxvalue",children:"ObxValue"}),"\n",(0,i.jsxs)(n.p,{children:["Similar a ",(0,i.jsx)(n.a,{href:"#valuebuilder",children:(0,i.jsx)(n.code,{children:"ValueBuilder"})}),", pero esta es la versi\xf3n Reactiva, pasas una instancia Rx (\xbfrecuerdas los .obs m\xe1gicos?) y\nactualizaciones autom\xe1ticamente... \xbfNo es incre\xedble?"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"ObxValue((data) => Switch(\n        value: data.value,\n        onChanged: data, // Rx has a _callable_ function! You could use (flag) => data.value = flag,\n    ),\n    false.obs,\n),\n"})}),"\n",(0,i.jsx)(n.h2,{id:"consejos-\xfatiles",children:"Consejos \xfatiles"}),"\n",(0,i.jsxs)(n.p,{children:["Los tipos ",(0,i.jsx)(n.code,{children:".obs"}),"ervables (tambi\xe9n conocidos como ",(0,i.jsx)(n.em,{children:"Rx"})," Types) tienen una amplia variedad de m\xe9todos y operadores internos."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Es muy com\xfan ",(0,i.jsx)(n.em,{children:"creer"})," que una propiedad con ",(0,i.jsx)(n.code,{children:".obs"})," ",(0,i.jsx)(n.strong,{children:"IS"})," el valor real... \xa1pero no te equivoques!\nEvitamos la declaraci\xf3n Type de la variable, porque el compilador de Dart es suficientemente inteligente, y el c\xf3digo\nse ve m\xe1s limpio, pero:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"var message = 'Hello world'.obs;\nprint( 'Message \"$message\" has Type ${message.runtimeType}');\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\xa1Incluso si ",(0,i.jsx)(n.code,{children:"message"})," ",(0,i.jsx)(n.em,{children:"imprime"})," el valor real de cadena, el tipo es ",(0,i.jsx)(n.strong,{children:"RxString"}),"!"]}),"\n",(0,i.jsxs)(n.p,{children:["As\xed que no puedes hacer ",(0,i.jsx)(n.code,{children:"message.substring( 0, 4 )"}),".\nTienes que acceder al verdadero ",(0,i.jsx)(n.code,{children:"valor"})," dentro del ",(0,i.jsx)(n.em,{children:"observable"}),':\nLa forma m\xe1s "utilizada" es ',(0,i.jsx)(n.code,{children:". alue"}),", pero, \xbfsab\xedas que tambi\xe9n puedes usar..."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"final name = 'GetX'.obs;\n// only \"updates\" the stream, if the value is different from the current one.\nname.value = 'Hey';\n\n// All Rx properties are \"callable\" and returns the new value.\n// but this approach does not accepts `null`, the UI will not rebuild.\nname('Hello');\n\n// is like a getter, prints 'Hello'.\nname() ;\n\n/// numbers:\n\nfinal count = 0.obs;\n\n// You can use all non mutable operations from num primitives!\ncount + 1;\n\n// Watch out! this is only valid if `count` is not final, but var\ncount += 1;\n\n// You can also compare against values:\ncount > 2;\n\n/// booleans:\n\nfinal flag = false.obs;\n\n// switches the value between true/false\nflag.toggle();\n\n\n/// all types:\n\n// Sets the `value` to null.\nflag.nil();\n\n// All toString(), toJson() operations are passed down to the `value`\nprint( count ); // calls `toString()` inside  for RxInt\n\nfinal abc = [0,1,2].obs;\n// Converts the value to a json Array, prints RxList\n// Json is supported by all Rx types!\nprint('json: ${jsonEncode(abc)}, type: ${abc.runtimeType}');\n\n// RxMap, RxList and RxSet are special Rx types, that extends their native types.\n// but you can work with a List as a regular list, although is reactive!\nabc.add(12); // pushes 12 to the list, and UPDATES the stream.\nabc[3]; // like Lists, reads the index 3.\n\n\n// equality works with the Rx and the value, but hashCode is always taken from the value\nfinal number = 12.obs;\nprint( number == 12 ); // prints > true\n\n/// Custom Rx Models:\n\n// toJson(), toString() are deferred to the child, so you can implement override on them, and print() the observable directly.\n\nclass User {\n    String name, last;\n    int age;\n    User({this.name, this.last, this.age});\n\n    @override\n    String toString() => '$name $last, $age years old';\n}\n\nfinal user = User(name: 'John', last: 'Doe', age: 33).obs;\n\n// `user` is \"reactive\", but the properties inside ARE NOT!\n// So, if we change some variable inside of it...\nuser.value.name = 'Roi';\n// The widget will not rebuild!,\n// `Rx` don't have any clue when you change something inside user.\n// So, for custom classes, we need to manually \"notify\" the change.\nuser.refresh();\n\n// or we can use the `update()` method!\nuser.update((value){\n  value.name='Roi';\n});\n\nprint( user );\n"})}),"\n",(0,i.jsx)(n.h2,{id:"mixin-de-estado",children:"Mixin de estado"}),"\n",(0,i.jsxs)(n.p,{children:["Otra forma de manejar tu estado ",(0,i.jsx)(n.code,{children:"UI"})," es usar el ",(0,i.jsx)(n.code,{children:"StateMixin<T>"})," .\nPara implementarlo, usa el ",(0,i.jsx)(n.code,{children:"con"})," para agregar el ",(0,i.jsx)(n.code,{children:"StateMixin<T>"}),"\na tu controlador que permite un modelo T."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class Controller extends GetController with StateMixin<User>{}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["El m\xe9todo ",(0,i.jsx)(n.code,{children:"change()"})," cambia el Estado siempre que queremos.\nSimplemente pase los datos y el estado de esta manera:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"change(data, status: RxStatus.success());\n"})}),"\n",(0,i.jsx)(n.p,{children:"RxStatus permite estos estados:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"RxStatus.loading();\nRxStatus.success();\nRxStatus.empty();\nRxStatus.error('message');\n"})}),"\n",(0,i.jsx)(n.p,{children:"Para representarlo en la interfaz de usuario, use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class OtherClass extends GetView<Controller> {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n\n      body: controller.obx(\n        (state)=>Text(state.name),\n        \n        // here you can put your custom loading indicator, but\n        // by default would be Center(child:CircularProgressIndicator())\n        onLoading: CustomLoadingIndicator(),\n        onEmpty: Text('No data found'),\n\n        // here also you can set your own error widget, but by\n        // default will be an Center(child:Text(error))\n        onError: (error)=>Text(error),\n      ),\n    );\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"getview",children:"GetView"}),"\n",(0,i.jsx)(n.p,{children:"Me encanta este Widget, es tan simple, pero tan \xfatil!"}),"\n",(0,i.jsxs)(n.p,{children:["Es un Widget ",(0,i.jsx)(n.code,{children:"const Stateless"})," que tiene un getter ",(0,i.jsx)(n.code,{children:"controller"})," para un ",(0,i.jsx)(n.code,{children:"Controller"})," registrado, eso es todo."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:" class AwesomeController extends GetController {\n   final String title = 'My Awesome View';\n }\n\n  // ALWAYS remember to pass the `Type` you used to register your controller!\n class AwesomeView extends GetView<AwesomeController> {\n   @override\n   Widget build(BuildContext context) {\n     return Container(\n       padding: EdgeInsets.all(20),\n       child: Text(controller.title), // just call `controller.something`\n     );\n   }\n }\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ver-responsiva",children:"Ver Responsiva"}),"\n",(0,i.jsxs)(n.p,{children:["Extender este widget para crear una vista receptiva.\neste widget contiene la propiedad ",(0,i.jsx)(n.code,{children:"screen"})," que tiene toda la informaci\xf3n\nsobre el tama\xf1o y el tipo de pantalla."]}),"\n",(0,i.jsx)(n.h5,{id:"c\xf3mo-usarlo",children:"C\xf3mo usarlo"}),"\n",(0,i.jsx)(n.p,{children:"Tienes dos opciones para construirlo."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["con el m\xe9todo ",(0,i.jsx)(n.code,{children:"builder"})," devuelve el widget a construir."]}),"\n",(0,i.jsxs)(n.li,{children:["con m\xe9todos ",(0,i.jsx)(n.code,{children:"desktop"}),", ",(0,i.jsx)(n.code,{children:"tablet"}),",",(0,i.jsx)(n.code,{children:"phone"}),", ",(0,i.jsx)(n.code,{children:"watch"}),". el m\xe9todo\nespec\xedfico se construir\xe1 cuando el tipo de pantalla coincida con el m\xe9todo\ncuando la pantalla sea [ScreenType.Tablet] el m\xe9todo ",(0,i.jsx)(n.code,{children:"tablet"}),"\nse existir\xe1, y as\xed sucesivamente.\n",(0,i.jsx)(n.strong,{children:"Nota:"})," Si usas este m\xe9todo, por favor establece la propiedad ",(0,i.jsx)(n.code,{children:"alwaysUseBuilder"})," a ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Con la propiedad ",(0,i.jsx)(n.code,{children:"settings"})," puedes establecer el l\xedmite de ancho para los tipos de pantalla."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/SchabanBo/get_page_example/blob/master/docs/Example.gif?raw=true",children:"example"}),"\nC\xf3digo a esta pantalla\n",(0,i.jsx)(n.a,{href:"https://github.com/SchabanBo/get_page_example/blob/master/lib/pages/responsive_example/responsive_view.dart",children:"code"})]}),"\n",(0,i.jsx)(n.h4,{id:"getwidget",children:"GetWidget"}),"\n",(0,i.jsxs)(n.p,{children:["La mayor\xeda de la gente no tiene ni idea de este Widget, o confunde totalmente el uso de \xe9l.\nEl caso de uso es muy raro, pero muy espec\xedfico: ",(0,i.jsx)(n.code,{children:"caches"})," un Controller.\nDebido a la ",(0,i.jsx)(n.em,{children:"cache"}),", no puede ser un ",(0,i.jsx)(n.code,{children:"const Stateless"}),"."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'Entonces, \xbfcu\xe1ndo necesitas "cache" un Controlador?'}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:['Si usas, otra caracter\xedstica "no tan com\xfan" de ',(0,i.jsx)(n.strong,{children:"GetX"}),": ",(0,i.jsx)(n.code,{children:"Get.create()"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Get.create(()=>Controller())"})," generar\xe1 un nuevo ",(0,i.jsx)(n.code,{children:"Controller"})," cada vez que llame\n",(0,i.jsx)(n.code,{children:"Get.find<Controller>()"}),","]}),"\n",(0,i.jsxs)(n.p,{children:["Ah\xed es donde brilla ",(0,i.jsx)(n.code,{children:"GetWidget"}),'... como puedes usarlo, por ejemplo,\npara mantener una lista de elementos de Tarea As\xed que, si el widget es "reconstruido", mantendr\xe1 la misma instancia del controlador.']}),"\n",(0,i.jsx)(n.h4,{id:"getxservice",children:"GetxService"}),"\n",(0,i.jsxs)(n.p,{children:["Esta clase es como un ",(0,i.jsx)(n.code,{children:"GetxController"}),", comparte el mismo ciclo de vida ( ",(0,i.jsx)(n.code,{children:"onInit()"}),", ",(0,i.jsx)(n.code,{children:"onReady()"}),", ",(0,i.jsx)(n.code,{children:"onClose()"}),').\nPero no tiene una "l\xf3gica" dentro de ella. Acaba de notificar al sistema de Inyecci\xf3n de Dependencia ',(0,i.jsx)(n.strong,{children:"GetX"}),", que esta subclase\n",(0,i.jsx)(n.strong,{children:"no"})," puede ser removida de la memoria."]}),"\n",(0,i.jsxs)(n.p,{children:['As\xed que es super \xfatil para mantener sus "Servicios" siempre accesible y activo con ',(0,i.jsx)(n.code,{children:"Get.find()"}),". Me gusta:\n",(0,i.jsx)(n.code,{children:"ApiService"}),", ",(0,i.jsx)(n.code,{children:"StorageService"}),", ",(0,i.jsx)(n.code,{children:"CacheService"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> main() async {\n  await initServices(); /// AWAIT SERVICES INITIALIZATION.\n  runApp(SomeApp());\n}\n\n/// Is a smart move to make your Services intiialize before you run the Flutter app.\n/// as you can control the execution flow (maybe you need to load some Theme configuration,\n/// apiKey, language defined by the User... so load SettingService before running ApiService.\n/// so GetMaterialApp() doesnt have to rebuild, and takes the values directly.\nvoid initServices() async {\n  print('starting services ...');\n  /// Here is where you put get_storage, hive, shared_pref initialization.\n  /// or moor connection, or whatever that's async.\n  await Get.putAsync(() => DbService().init());\n  await Get.putAsync(SettingsService()).init();\n  print('All services started...');\n}\n\nclass DbService extends GetxService {\n  Future<DbService> init() async {\n    print('$runtimeType delays 2 sec');\n    await 2.delay();\n    print('$runtimeType ready!');\n    return this;\n  }\n}\n\nclass SettingsService extends GetxService {\n  void init() async {\n    print('$runtimeType delays 1 sec');\n    await 1.delay();\n    print('$runtimeType ready!');\n  }\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["La \xfanica forma de eliminar un ",(0,i.jsx)(n.code,{children:"GetxService"}),", es con ",(0,i.jsx)(n.code,{children:"Get.reset()"}),' que es como un\n"Reinicio caliente" de tu aplicaci\xf3n. As\xed que recuerda, si necesitas persistencia absoluta de una instancia de clase durante la vida \xfatil de\nde tu aplicaci\xf3n, usa ',(0,i.jsx)(n.code,{children:"GetxService"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"tests",children:"Tests"}),"\n",(0,i.jsx)(n.p,{children:"Puedes probar tus controladores como cualquier otra clase, incluyendo sus ciclos de vida:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class Controller extends GetxController {\n  @override\n  void onInit() {\n    super.onInit();\n    //Change value to name2\n    name.value = 'name2';\n  }\n\n  @override\n  void onClose() {\n    name.value = '';\n    super.onClose();\n  }\n\n  final name = 'name1'.obs;\n\n  void changeName() => name.value = 'name3';\n}\n\nvoid main() {\n  test('''\nTest the state of the reactive variable \"name\" across all of its lifecycles''',\n      () {\n    /// You can test the controller without the lifecycle,\n    /// but it's not recommended unless you're not using\n    ///  GetX dependency injection\n    final controller = Controller();\n    expect(controller.name.value, 'name1');\n\n    /// If you are using it, you can test everything,\n    /// including the state of the application after each lifecycle.\n    Get.put(controller); // onInit was called\n    expect(controller.name.value, 'name2');\n\n    /// Test your functions\n    controller.changeName();\n    expect(controller.name.value, 'name3');\n\n    /// onClose was called\n    Get.delete<Controller>();\n\n    expect(controller.name.value, '');\n  });\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"consejos",children:"Consejos"}),"\n",(0,i.jsx)(n.h5,{id:"mockito-o-cola-de-mocktail",children:"Mockito o cola de mocktail"}),"\n",(0,i.jsx)(n.p,{children:"Si necesita simular su GetxController/GetxService, deber\xeda extender GetxController, y mezclarlo con Mock, de esa manera"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class NotificationServiceMock extends GetxService with Mock implements NotificationService {}\n"})}),"\n",(0,i.jsx)(n.h5,{id:"usando-getreset",children:"Usando Get.reset()"}),"\n",(0,i.jsx)(n.p,{children:"Si est\xe1s probando widgets, o grupos de pruebas, usa Obtener. eset al final de tu prueba o en tearDown para reiniciar todas las configuraciones de tu prueba anterior."}),"\n",(0,i.jsx)(n.h5,{id:"gettestmode",children:"Get.testMode"}),"\n",(0,i.jsxs)(n.p,{children:["si est\xe1s usando tu navegaci\xf3n en tus controladores, usa ",(0,i.jsx)(n.code,{children:"Get.testMode = true"})," al principio de tu principal."]}),"\n",(0,i.jsx)(n.h1,{id:"rompiendo-cambios-desde-20",children:"Rompiendo cambios desde 2.0"}),"\n",(0,i.jsx)(n.p,{children:"1- Tipos Rx:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Antes"}),(0,i.jsx)(n.th,{children:"Despu\xe9s"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"StringX"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"RxString"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"IntX"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"RxInt"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MapX"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"RxMap"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Lista X"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"RxList"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"N\xfamero X"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"RxNum"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DoubleX"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Duplicar"})})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Ahora RxController y GetBuilder se han fusionado, ya no necesita memorizar qu\xe9 controlador desea utilizar. s\xf3lo tiene que utilizar GetxController, funcionar\xe1 para la gesti\xf3n simple del estado y tambi\xe9n para la reactividad."}),"\n",(0,i.jsx)(n.p,{children:"2- Rutas Nombradas\nBefore:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp(\n  namedRoutes: {\n    '/': GetRoute(page: Home()),\n  }\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Ahora:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"GetMaterialApp(\n  getPages: [\n    GetPage(name: '/', page: () => Home()),\n  ]\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"\xbfPor qu\xe9 este cambio?\nA menudo, puede ser necesario decidir qu\xe9 p\xe1gina se mostrar\xe1 desde un par\xe1metro, o un token de inicio de sesi\xf3n, el enfoque anterior era inflexible, ya que no permit\xeda esto.\nInsertar la p\xe1gina en una funci\xf3n ha reducido significativamente el consumo de RAM, ya que las rutas no se asignar\xe1n en la memoria desde que se inici\xf3 la aplicaci\xf3n, y tambi\xe9n permitieron hacer este tipo de m\xe9todo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"\nGetStorage box = GetStorage();\n\nGetMaterialApp(\n  getPages: [\n    GetPage(name: '/', page:(){\n      return box.hasData('token') ? Home() : Login();\n    })\n  ]\n)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>r});var i=a(7294);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);