"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Get Started","href":"/getx/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"About GetX","href":"/getx/docs/about","docId":"about","unlisted":false},{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"State management","href":"/getx/docs/concepts/state-management","docId":"concepts/state-management","unlisted":false},{"type":"link","label":"Route management","href":"/getx/docs/concepts/route-management","docId":"concepts/route-management","unlisted":false},{"type":"link","label":"Dependency management","href":"/getx/docs/concepts/dependency-management","docId":"concepts/dependency-management","unlisted":false}],"href":"/getx/docs/category/concepts"},{"type":"category","label":"The 3 Pillars","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"State","href":"/getx/docs/pillars/state-management","docId":"pillars/state-management","unlisted":false},{"type":"link","label":"Route","href":"/getx/docs/pillars/route-management","docId":"pillars/route-management","unlisted":false},{"type":"link","label":"Dependency","href":"/getx/docs/pillars/dependency-management","docId":"pillars/dependency-management","unlisted":false}],"href":"/getx/docs/category/the-3-pillars"},{"type":"link","label":"Utils","href":"/getx/docs/utils","docId":"utils","unlisted":false},{"type":"category","label":"Community","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Channels","href":"/getx/docs/community/channels","docId":"community/channels","unlisted":false},{"type":"link","label":"How to contribute","href":"/getx/docs/community/contribute","docId":"community/contribute","unlisted":false},{"type":"link","label":"Resources","href":"/getx/docs/community/resources","docId":"community/resources","unlisted":false}],"href":"/getx/docs/category/community"}]},"docs":{"about":{"id":"about","title":"About GetX","description":"- GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.","sidebar":"tutorialSidebar"},"community/channels":{"id":"community/channels","title":"Channels","description":"GetX has a highly active and helpful community. If you have questions, or would like any assistance regarding the use of this framework, please join our community channels, your question will be answered more quickly, and it will be the most suitable place. This repository is exclusive for opening issues, and requesting resources, but feel free to be part of GetX Community.","sidebar":"tutorialSidebar"},"community/contribute":{"id":"community/contribute","title":"How to contribute","description":"Want to contribute to the project? We will be proud to highlight you as one of our collaborators. Here are some points where you can contribute and make Get (and Flutter) even better.","sidebar":"tutorialSidebar"},"community/resources":{"id":"community/resources","title":"Resources","description":"Articles and videos","sidebar":"tutorialSidebar"},"concepts/dependency-management":{"id":"concepts/dependency-management","title":"Dependency management","description":"Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:","sidebar":"tutorialSidebar"},"concepts/route-management":{"id":"concepts/route-management","title":"Route management","description":"If you are going to use routes/snackbars/dialogs/bottomsheets without context, GetX is excellent for you too, just see it:","sidebar":"tutorialSidebar"},"concepts/state-management":{"id":"concepts/state-management","title":"State management","description":"Get has two different state managers: the simple state manager (we\'ll call it GetBuilder) and the reactive state manager (GetX/Obx)","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Get Started","description":"Installing","sidebar":"tutorialSidebar"},"pillars/dependency-management":{"id":"pillars/dependency-management","title":"Dependency","description":"Get has a simple and powerful dependency manager that allows you to retrieve the same class as your Bloc or Controller with just 1 lines of code, no Provider context, no inheritedWidget:","sidebar":"tutorialSidebar"},"pillars/route-management":{"id":"pillars/route-management","title":"Route","description":"This is the complete explanation of all there is to Getx when the matter is route management.","sidebar":"tutorialSidebar"},"pillars/state-management":{"id":"pillars/state-management","title":"State","description":"GetX does not use Streams or ChangeNotifier like other state managers. Why? In addition to building applications for android, iOS, web, windows, macos and linux, with GetX you can build server applications with the same syntax as Flutter/GetX. In order to improve response time and reduce RAM consumption, we created GetValue and GetStream, which are low latency solutions that deliver a lot of performance, at a low operating cost. We use this base to build all of our resources, including state management.","sidebar":"tutorialSidebar"},"utils":{"id":"utils","title":"Utils","description":"Internationalization","sidebar":"tutorialSidebar"}}}')}}]);